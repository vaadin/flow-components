<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.vaadin</groupId>
        <artifactId>vaadin-login-flow-parent</artifactId>
        <version>2.2-SNAPSHOT</version>
    </parent>
    <artifactId>vaadin-login-integration-tests-bower-mode</artifactId>

    <packaging>war</packaging>
    <name>Vaadin Login Integration Tests in Bower Mode</name>

    <properties>
        <failOnMissingWebXml>false</failOnMissingWebXml>
        <ci-sauce.version>1.138</ci-sauce.version>
        <sauce.options>--tunnel-identifier ${maven.build.timestamp}</sauce.options>
        <buildtools.directory>build-tools</buildtools.directory>
        <!-- Not the newest version because of https://www.polymer-project.org/2.0/docs/tools/node-support -->
        <frontend.maven.plugin.version>1.6</frontend.maven.plugin.version>
        <node.version>v8.9.0</node.version>
        <yarn.version>v1.3.2</yarn.version>
        <frontend.working.directory>${project.basedir}/src/main/webapp/frontend</frontend.working.directory>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>1.7.12</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.0.1</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>flow-client</artifactId>
            <version>${flow.version}</version>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>flow-data</artifactId>
            <version>${flow.version}</version>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>flow-html-components</artifactId>
            <version>${flow.version}</version>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-lumo-theme</artifactId>
            <version>${flow.version}</version>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>flow-server-production-mode</artifactId>
            <version>${flow.version}</version>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-login-flow</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-icons-flow</artifactId>
            <version>2.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-testbench-core</artifactId>
            <version>${testbench.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-login-testbench</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <configuration combine.self="override">
                    <skip>${skipITs}</skip>
                    <scanIntervalSeconds>2</scanIntervalSeconds>
                    <stopKey>STOP</stopKey>
                    <stopPort>8005</stopPort>

                    <webAppConfig>
                        <containerIncludeJarPattern>^$</containerIncludeJarPattern>
                        <webInfIncludeJarPattern>^((?!flow-server-production-mode).)*$</webInfIncludeJarPattern>
                        <resourceBases>
                            <resourceBase>${project.build.directory}/${project.build.finalName}</resourceBase>
                        </resourceBases>
                    </webAppConfig>
                </configuration>
            </plugin>

            <!-- plugins for tests -->
            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
                <version>1.6.8</version>
                <configuration>
                    <skipNexusStagingDeployMojo>true</skipNexusStagingDeployMojo>
                </configuration>
            </plugin>
            <!-- activate BOWER -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <version>1.0.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>set-system-properties</goal>
                        </goals>
                        <configuration>
                            <properties>
                                <property>
                                    <name>vaadin.bowerMode</name>
                                    <value>true</value>
                                </property>
                            </properties>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- install bower tooling -->
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>${frontend.maven.plugin.version}</version>

                <configuration>
                    <nodeVersion>${node.version}</nodeVersion>
                    <yarnVersion>${yarn.version}</yarnVersion>
                    <workingDirectory>${buildtools.directory}</workingDirectory>
                </configuration>

                <executions>
                    <execution>
                        <id>install-tools-then-build</id>
                        <goals>
                            <goal>install-node-and-yarn</goal>
                            <goal>yarn</goal>
                        </goals>
                        <configuration>
                            <workingDirectory>${buildtools.directory}</workingDirectory>
                            <arguments>install-bower-and-dependencies</arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- compile app for production in bower mode -->
            <plugin>
                <groupId>com.vaadin</groupId>
                <artifactId>flow-maven-plugin</artifactId>
                <configuration>
                    <bowerMode>true</bowerMode>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>copy-production-files</goal>
                            <goal>package-for-production</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>saucelabs-it</id>
            <activation>
                <property>
                    <name>!runLocally</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <systemPropertyVariables>
                                <sauce.user>${sauce.user}</sauce.user>
                                <sauce.sauceAccessKey>${sauce.sauceAccessKey}</sauce.sauceAccessKey>
                                <sauce.options>${sauce.options}</sauce.options>
                                <com.vaadin.testbench.Parameters.testsInParallel>5</com.vaadin.testbench.Parameters.testsInParallel>
                            </systemPropertyVariables>
                            <trimStackTrace>false</trimStackTrace>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>com.saucelabs.maven.plugin</groupId>
                        <artifactId>sauce-connect-plugin</artifactId>
                        <version>2.1.25</version>
                        <configuration>
                            <sauceUsername>${sauce.user}</sauceUsername>
                            <sauceAccessKey>${sauce.sauceAccessKey}</sauceAccessKey>
                            <options>${sauce.options}</options>
                        </configuration>
                        <dependencies>
                            <dependency>
                                <groupId>com.saucelabs</groupId>
                                <artifactId>ci-sauce</artifactId>
                                <version>${ci-sauce.version}</version>
                            </dependency>
                        </dependencies>
                        <executions>
                            <!-- Start Sauce Connect prior to running the integration
                                tests -->
                            <execution>
                                <id>start-sauceconnect</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start-sauceconnect</goal>
                                </goals>
                            </execution>
                            <!-- Stop the Sauce Connect process after the integration
                                tests have finished -->
                            <execution>
                                <id>stop-sauceconnect</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop-sauceconnect</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>local-it</id>
            <activation>
                <property>
                    <name>runLocally</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <trimStackTrace>false</trimStackTrace>
                            <systemPropertyVariables>
                                <webdriver.chrome.driver>${webdriver.chrome.driver}</webdriver.chrome.driver>
                                <webdriver.edge.driver>${webdriver.edge.driver}</webdriver.edge.driver>
                                <com.vaadin.testbench.Parameters.runLocally>${runLocally}</com.vaadin.testbench.Parameters.runLocally>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                    <!-- Plugin for automatically download Chrome Driver for tests -->
                    <plugin>
                        <groupId>com.lazerycode.selenium</groupId>
                        <artifactId>driver-binary-downloader-maven-plugin</artifactId>
                        <version>1.0.17</version>
                        <configuration combine.self="override">
                            <!-- root directory that downloaded driver binaries will be stored
                                in -->
                            <onlyGetDriversForHostOperatingSystem>true</onlyGetDriversForHostOperatingSystem>
                            <overwriteFilesThatExist>true</overwriteFilesThatExist>
                            <rootStandaloneServerDirectory>.driver</rootStandaloneServerDirectory>
                            <customRepositoryMap>${project.basedir}/webdrivers.xml</customRepositoryMap>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>selenium</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                </plugins>
            </build>
        </profile>
    </profiles>
</project>
